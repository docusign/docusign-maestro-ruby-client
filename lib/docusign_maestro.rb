=begin
#Maestro API

#Maestro authors and executes experiences that allow non-coders the ability to define Simple Business Process without having to write code and to deploy them seamlessly without having to have development expertise

OpenAPI spec version: 1.0.0
Contact: devcenter@docusign.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

# Common files
require 'docusign_maestro/client/api_client'
require 'docusign_maestro/client/api_error'
require 'docusign_maestro/version'
require 'docusign_maestro/configuration'

# Client Files
require 'docusign_maestro/client/auth/oauth'

# Models
require 'docusign_maestro/models/access_token_response'
require 'docusign_maestro/models/access_token_token_types'
require 'docusign_maestro/models/cancel_response'
require 'docusign_maestro/models/create_or_update_workflow_definition_request_body'
require 'docusign_maestro/models/ds_do_until_step'
require 'docusign_maestro/models/ds_doc_gen_step'
require 'docusign_maestro/models/ds_doc_gen_step_input'
require 'docusign_maestro/models/ds_idv_step'
require 'docusign_maestro/models/ds_idv_step_input'
require 'docusign_maestro/models/ds_if_else_step'
require 'docusign_maestro/models/ds_loop_step'
require 'docusign_maestro/models/ds_parallel_step'
require 'docusign_maestro/models/ds_service_step'
require 'docusign_maestro/models/ds_sign_step'
require 'docusign_maestro/models/ds_sign_step_input'
require 'docusign_maestro/models/ds_transformation_step'
require 'docusign_maestro/models/ds_web_forms_step'
require 'docusign_maestro/models/ds_web_forms_step_config'
require 'docusign_maestro/models/ds_workflow_boolean_expression'
require 'docusign_maestro/models/ds_workflow_comparison_expression'
require 'docusign_maestro/models/ds_workflow_comparison_operator_types'
require 'docusign_maestro/models/ds_workflow_concat_expression'
require 'docusign_maestro/models/ds_workflow_doc_gen_doc_output_format'
require 'docusign_maestro/models/ds_workflow_expression_types_boolean_expression'
require 'docusign_maestro/models/ds_workflow_expression_types_comparison_expression'
require 'docusign_maestro/models/ds_workflow_expression_types_parallel_expression'
require 'docusign_maestro/models/ds_workflow_index_of_expression'
require 'docusign_maestro/models/ds_workflow_lane'
require 'docusign_maestro/models/ds_workflow_lanes_record'
require 'docusign_maestro/models/ds_workflow_last_index_of_expression'
require 'docusign_maestro/models/ds_workflow_logical_operator_types'
require 'docusign_maestro/models/ds_workflow_parallel_expression'
require 'docusign_maestro/models/ds_workflow_participant_record'
require 'docusign_maestro/models/ds_workflow_replace_expression'
require 'docusign_maestro/models/ds_workflow_step'
require 'docusign_maestro/models/ds_workflow_step_types_ds_doc_gen'
require 'docusign_maestro/models/ds_workflow_step_types_ds_idv'
require 'docusign_maestro/models/ds_workflow_step_types_ds_if_else'
require 'docusign_maestro/models/ds_workflow_step_types_ds_sign'
require 'docusign_maestro/models/ds_workflow_step_types_ds_transformation'
require 'docusign_maestro/models/ds_workflow_step_types_ds_web_forms'
require 'docusign_maestro/models/ds_workflow_step_types_do_until'
require 'docusign_maestro/models/ds_workflow_step_types_loop'
require 'docusign_maestro/models/ds_workflow_step_types_parallel'
require 'docusign_maestro/models/ds_workflow_substring_expression'
require 'docusign_maestro/models/ds_workflow_to_lower_expression'
require 'docusign_maestro/models/ds_workflow_to_upper_expression'
require 'docusign_maestro/models/ds_workflow_transformation_expression'
require 'docusign_maestro/models/ds_workflow_transformation_expression_types_concat_expression'
require 'docusign_maestro/models/ds_workflow_transformation_expression_types_index_of_expression'
require 'docusign_maestro/models/ds_workflow_transformation_expression_types_last_index_of_expression'
require 'docusign_maestro/models/ds_workflow_transformation_expression_types_replace_expression'
require 'docusign_maestro/models/ds_workflow_transformation_expression_types_substring_expression'
require 'docusign_maestro/models/ds_workflow_transformation_expression_types_to_lower_expression'
require 'docusign_maestro/models/ds_workflow_transformation_expression_types_to_upper_expression'
require 'docusign_maestro/models/ds_workflow_trigger'
require 'docusign_maestro/models/ds_workflow_trigger_types'
require 'docusign_maestro/models/ds_workflow_variable'
require 'docusign_maestro/models/ds_workflow_variable_from_participant'
require 'docusign_maestro/models/ds_workflow_variable_from_step'
require 'docusign_maestro/models/ds_workflow_variable_from_variable'
require 'docusign_maestro/models/ds_workflow_variable_record'
require 'docusign_maestro/models/ds_workflow_variable_source_types_step'
require 'docusign_maestro/models/ds_workflow_variable_source_types_variable'
require 'docusign_maestro/models/deploy_request'
require 'docusign_maestro/models/deploy_response'
require 'docusign_maestro/models/deploy_status'
require 'docusign_maestro/models/deployment_status'
require 'docusign_maestro/models/e_sign_document_from_e_sign_template'
require 'docusign_maestro/models/e_sign_document_from_previous_step'
require 'docusign_maestro/models/e_sign_document_types_from_ds_template'
require 'docusign_maestro/models/e_sign_document_types_from_previous_step'
require 'docusign_maestro/models/e_sign_documents'
require 'docusign_maestro/models/e_sign_locale_policy'
require 'docusign_maestro/models/e_sign_signer'
require 'docusign_maestro/models/e_sign_tabs'
require 'docusign_maestro/models/e_sign_tabs_record'
require 'docusign_maestro/models/error_codes'
require 'docusign_maestro/models/error_response'
require 'docusign_maestro/models/event_types'
require 'docusign_maestro/models/get_configuration_instance_response'
require 'docusign_maestro/models/get_configuration_instances_response'
require 'docusign_maestro/models/get_configuration_instances_response_config_instances'
require 'docusign_maestro/models/http_types'
require 'docusign_maestro/models/invalid_workflow_response'
require 'docusign_maestro/models/new_or_updated_workflow_definition_response'
require 'docusign_maestro/models/number_or_variable'
require 'docusign_maestro/models/participant'
require 'docusign_maestro/models/progress_instance'
require 'docusign_maestro/models/record_string_boolean'
require 'docusign_maestro/models/record_string_or_variable_or_transformation'
require 'docusign_maestro/models/record_to_never'
require 'docusign_maestro/models/replication_status'
require 'docusign_maestro/models/started_by_instance'
require 'docusign_maestro/models/string_or_variable_or_transformation'
require 'docusign_maestro/models/success_message_response'
require 'docusign_maestro/models/trigger_payload'
require 'docusign_maestro/models/trigger_workflow_via_post_response'
require 'docusign_maestro/models/validation_errors'
require 'docusign_maestro/models/workflow_definition'
require 'docusign_maestro/models/workflow_definition_list'
require 'docusign_maestro/models/workflow_definition_metadata'
require 'docusign_maestro/models/workflow_definition_with_id'
require 'docusign_maestro/models/workflow_delete_response'
require 'docusign_maestro/models/workflow_instance'
require 'docusign_maestro/models/workflow_instance_map'
require 'docusign_maestro/models/workflow_instance_state'
require 'docusign_maestro/models/workflow_instances_list'
require 'docusign_maestro/models/workflow_metadata_status'
require 'docusign_maestro/models/workflow_step_error'
require 'docusign_maestro/models/workflow_step_error_error'
require 'docusign_maestro/models/workflow_step_history'
require 'docusign_maestro/models/workflow_step_history_list'
require 'docusign_maestro/models/workflow_step_history_state'

# APIs
require 'docusign_maestro/api/workflow_instance_management_api'
require 'docusign_maestro/api/workflow_management_api'
require 'docusign_maestro/api/workflow_trigger_api'

module DocuSign_Maestro
  class << self
    # Customize default settings for the SDK using block.
    #   DocuSign_Maestro.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end