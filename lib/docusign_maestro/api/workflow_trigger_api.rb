=begin
#Maestro API

#Maestro authors and executes experiences that allow non-coders the ability to define Simple Business Process without having to write code and to deploy them seamlessly without having to have development expertise

OpenAPI spec version: 1.0.0
Contact: devcenter@docusign.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module DocuSign_Maestro

  class TriggerWorkflowOptions
    # Managed Token Id registered with DS Account Server
    attr_accessor :mtid

    # Managed Token Secret registered with DS Account Server
    attr_accessor :mtsec

    def self.default
      @@default ||= TriggerWorkflowOptions.new
    end
  end


  class WorkflowTriggerApi
    attr_accessor :api_client

    def initialize(api_client = WorkflowTriggerApi.default)
      @api_client = api_client
    end

    # Creates a new workflow instance after authenticating with DS Account Server
    # Creates a new workflow instance after authenticating with DS Account Server
    # @param account_id Account ID
    # @param workflow_definition_id Workflow Definition ID
    # @param body JSON payload that will be passed to the triggered workflow 
    # @param DocuSign_Maestro::TriggerWorkflowOptions Options for modifying the behavior of the function.
    # @return [TriggerWorkflowViaPostResponse]
    def trigger_workflow(account_id, workflow_definition_id, body, options = DocuSign_Maestro::TriggerWorkflowOptions.default)
      data, _status_code, _headers = trigger_workflow_with_http_info(account_id, workflow_definition_id,  body, options)
      return data
    end

    # Creates a new workflow instance after authenticating with DS Account Server
    # Creates a new workflow instance after authenticating with DS Account Server
    # @param account_id Account ID
    # @param workflow_definition_id Workflow Definition ID
    # @param body JSON payload that will be passed to the triggered workflow 
    # @param DocuSign_Maestro::TriggerWorkflowOptions Options for modifying the behavior of the function.
    # @return [Array<(TriggerWorkflowViaPostResponse, Fixnum, Hash)>] TriggerWorkflowViaPostResponse data, response status code and response headers
    def trigger_workflow_with_http_info(account_id, workflow_definition_id, body, options = DocuSign_Maestro::TriggerWorkflowOptions.default)
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: WorkflowTriggerApi.trigger_workflow ..."
      end
      # verify the required parameter 'account_id' is set
      fail ArgumentError, "Missing the required parameter 'account_id' when calling WorkflowTriggerApi.trigger_workflow" if account_id.nil?
      # verify the required parameter 'workflow_definition_id' is set
      fail ArgumentError, "Missing the required parameter 'workflow_definition_id' when calling WorkflowTriggerApi.trigger_workflow" if workflow_definition_id.nil?
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling WorkflowTriggerApi.trigger_workflow" if body.nil?
      # resource path
      local_var_path = "/v1/accounts/{accountId}/workflow_definitions/{workflowDefinitionId}/trigger".sub('{format}','json').sub('{' + 'accountId' + '}', account_id.to_s).sub('{' + 'workflowDefinitionId' + '}', workflow_definition_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'mtid'] = options.mtid if !options.mtid.nil?
      query_params[:'mtsec'] = options.mtsec if !options.mtsec.nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TriggerWorkflowViaPostResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WorkflowTriggerApi#trigger_workflow\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end